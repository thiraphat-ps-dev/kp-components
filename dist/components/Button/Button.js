var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
import React from 'react';
import { Button as MuiButton } from '@mui/material';
import { useKPTheme } from '../../context/KPContext';
var Button = function (props) {
    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x, _y, _z, _0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, _65, _66, _67, _68, _69, _70, _71, _72, _73, _74, _75, _76, _77, _78, _79, _80, _81, _82, _83, _84, _85, _86, _87, _88, _89, _90, _91, _92, _93, _94, _95, _96, _97, _98, _99, _100, _101, _102, _103, _104, _105, _106, _107, _108, _109, _110, _111, _112, _113, _114, _115, _116, _117, _118, _119, _120, _121, _122, _123, _124, _125, _126;
    var theme = useKPTheme().theme;
    var btn = (_a = theme.comp) === null || _a === void 0 ? void 0 : _a.btn;
    var stateStyle = {
        'apple-default': {
            disable: {
                background: (_b = theme.color) === null || _b === void 0 ? void 0 : _b.Base.Foreground.Disable,
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.default, " solid ").concat((_c = theme.color) === null || _c === void 0 ? void 0 : _c['on-Base'].Border.Disable),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: 'none',
                color: (_d = theme.color) === null || _d === void 0 ? void 0 : _d['on-Base'].Content.Disable,
            },
            focus: {
                background: (_e = theme.color) === null || _e === void 0 ? void 0 : _e.Base.Foreground['Elevated-16'],
                border: 'none',
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_f = theme.State) === null || _f === void 0 ? void 0 : _f.Focused.Default,
                color: (_g = theme.color) === null || _g === void 0 ? void 0 : _g.Social['Content-AppleWhite-Default'],
            },
            hover: {
                background: (_h = theme.color) === null || _h === void 0 ? void 0 : _h.Base.Foreground['Elevated-16'],
                border: 'none',
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_j = theme.Shadow) === null || _j === void 0 ? void 0 : _j.Below.xs,
                color: (_k = theme.color) === null || _k === void 0 ? void 0 : _k.Social['Content-AppleWhite-Default'],
            },
            normal: {
                background: (_l = theme.color) === null || _l === void 0 ? void 0 : _l.Base.Foreground['Elevated-16'],
                border: 'none',
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_m = theme.Shadow) === null || _m === void 0 ? void 0 : _m.Below.xs,
                color: (_o = theme.color) === null || _o === void 0 ? void 0 : _o.Social['Content-AppleWhite-Default'],
            },
            press: {
                background: (_p = theme.color) === null || _p === void 0 ? void 0 : _p.Base.Foreground['Elevated-16'],
                border: 'none',
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_q = theme.Shadow) === null || _q === void 0 ? void 0 : _q.Below.xs,
                color: (_r = theme.color) === null || _r === void 0 ? void 0 : _r.Social['Content-AppleWhite-Default'],
            },
        },
        'apple-outline': {
            disable: {
                background: (_s = theme.color) === null || _s === void 0 ? void 0 : _s.Base.Foreground.Disable,
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.default, " solid ").concat((_t = theme.color) === null || _t === void 0 ? void 0 : _t['on-Base'].Border.Disable),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: 'none',
                color: (_u = theme.color) === null || _u === void 0 ? void 0 : _u['on-Base'].Content.Disable,
            },
            focus: {
                background: (_v = theme.color) === null || _v === void 0 ? void 0 : _v.Social['Foreground-AppleOutline-Default'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.default, " solid ").concat((_w = theme.color) === null || _w === void 0 ? void 0 : _w.Social['Border-AppleOutline-Default']),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_x = theme.State) === null || _x === void 0 ? void 0 : _x.Focused.Default,
                color: (_y = theme.color) === null || _y === void 0 ? void 0 : _y.Social['Content-AppleWhite-Default'],
            },
            hover: {
                background: (_z = theme.color) === null || _z === void 0 ? void 0 : _z.Social['Foreground-AppleOutline-Default'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.default, " solid ").concat((_0 = theme.color) === null || _0 === void 0 ? void 0 : _0.Social['Border-AppleOutline-Default']),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_1 = theme.Shadow) === null || _1 === void 0 ? void 0 : _1.Below.xs,
                color: (_2 = theme.color) === null || _2 === void 0 ? void 0 : _2.Social['Content-AppleWhite-Default'],
            },
            normal: {
                background: (_3 = theme.color) === null || _3 === void 0 ? void 0 : _3.Social['Foreground-AppleOutline-Default'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.default, " solid ").concat((_4 = theme.color) === null || _4 === void 0 ? void 0 : _4.Social['Border-AppleOutline-Default']),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_5 = theme.Shadow) === null || _5 === void 0 ? void 0 : _5.Below.xs,
                color: (_6 = theme.color) === null || _6 === void 0 ? void 0 : _6.Social['Content-AppleWhite-Default'],
            },
            press: {
                background: (_7 = theme.color) === null || _7 === void 0 ? void 0 : _7.Social['Foreground-AppleOutline-Default'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.default, " solid ").concat((_8 = theme.color) === null || _8 === void 0 ? void 0 : _8.Social['Border-AppleOutline-Default']),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_9 = theme.Shadow) === null || _9 === void 0 ? void 0 : _9.Below.xs,
                color: (_10 = theme.color) === null || _10 === void 0 ? void 0 : _10.Social['Content-AppleWhite-Default'],
            },
        },
        'apple-primary': {
            disable: {
                background: (_11 = theme.color) === null || _11 === void 0 ? void 0 : _11.Base.Foreground.Disable,
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.default, " solid ").concat((_12 = theme.color) === null || _12 === void 0 ? void 0 : _12['on-Base'].Border.Disable),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: 'none',
                color: (_13 = theme.color) === null || _13 === void 0 ? void 0 : _13['on-Base'].Content.Disable,
            },
            focus: {
                background: (_14 = theme.color) === null || _14 === void 0 ? void 0 : _14.Social['Foreground-AppleBlack-Default'],
                border: 'none',
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_15 = theme.State) === null || _15 === void 0 ? void 0 : _15.Focused.Default,
                color: (_16 = theme.color) === null || _16 === void 0 ? void 0 : _16.Social['Content-AppleBlack-Default'],
            },
            hover: {
                background: (_17 = theme.color) === null || _17 === void 0 ? void 0 : _17.Social['Foreground-AppleBlack-Default'],
                border: 'none',
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: 'none',
                color: (_18 = theme.color) === null || _18 === void 0 ? void 0 : _18.Social['Content-AppleBlack-Default'],
            },
            normal: {
                background: (_19 = theme.color) === null || _19 === void 0 ? void 0 : _19.Social['Foreground-AppleBlack-Default'],
                border: 'none',
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: 'none',
                color: (_20 = theme.color) === null || _20 === void 0 ? void 0 : _20.Social['Content-AppleBlack-Default'],
            },
            press: {
                background: (_21 = theme.color) === null || _21 === void 0 ? void 0 : _21.Social['Foreground-AppleBlack-Default'],
                border: 'none',
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: 'none',
                color: (_22 = theme.color) === null || _22 === void 0 ? void 0 : _22.Social['Content-AppleBlack-Default'],
            },
        },
        default: {
            danger: {
                disable: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background.disable,
                    border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.default, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.disable),
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: 'none',
                    color: btn === null || btn === void 0 ? void 0 : btn.color.content.disable,
                },
                focus: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background['default-normal'],
                    border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.default, " solid ").concat((_23 = theme.color) === null || _23 === void 0 ? void 0 : _23['on-Base'].Border.Default),
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: (_24 = theme.State) === null || _24 === void 0 ? void 0 : _24.Focused.Default,
                    color: (_25 = theme.color) === null || _25 === void 0 ? void 0 : _25.Functional.Content.Error,
                },
                hover: {
                    background: (_26 = theme.color) === null || _26 === void 0 ? void 0 : _26.Functional.Foreground['Error Muted Hover'],
                    border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.default, " solid ").concat((_27 = theme.color) === null || _27 === void 0 ? void 0 : _27['on-Base'].Border.Default),
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: (_28 = theme.Shadow) === null || _28 === void 0 ? void 0 : _28.Below.xs,
                    color: (_29 = theme.color) === null || _29 === void 0 ? void 0 : _29.Functional.Content.Error,
                },
                normal: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background['default-normal'],
                    border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.default, " solid ").concat((_30 = theme.color) === null || _30 === void 0 ? void 0 : _30['on-Base'].Border.Default),
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: (_31 = theme.Shadow) === null || _31 === void 0 ? void 0 : _31.Below.xs,
                    color: (_32 = theme.color) === null || _32 === void 0 ? void 0 : _32.Functional.Content.Error,
                },
                press: {
                    background: (_33 = theme.color) === null || _33 === void 0 ? void 0 : _33.Functional.Foreground['Error Muted Pressed'],
                    border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.default, " solid ").concat((_34 = theme.color) === null || _34 === void 0 ? void 0 : _34['on-Base'].Border.Default),
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: (_35 = theme.Shadow) === null || _35 === void 0 ? void 0 : _35.Below.xs,
                    color: (_36 = theme.color) === null || _36 === void 0 ? void 0 : _36.Functional.Content.Error,
                },
            },
            disable: {
                background: (_37 = theme.color) === null || _37 === void 0 ? void 0 : _37.Base.Foreground.Disable,
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.default, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.disable),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: 'none',
                color: btn === null || btn === void 0 ? void 0 : btn.color.content.disable,
            },
            focus: {
                background: btn === null || btn === void 0 ? void 0 : btn.color.background['default-normal'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.default, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.default),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_38 = theme.State) === null || _38 === void 0 ? void 0 : _38.Focused.Default,
                color: btn === null || btn === void 0 ? void 0 : btn.color.content.default,
            },
            hover: {
                background: btn === null || btn === void 0 ? void 0 : btn.color.background['default-hover'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.default, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.default),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_39 = theme.Shadow) === null || _39 === void 0 ? void 0 : _39.Below.xs,
                color: btn === null || btn === void 0 ? void 0 : btn.color.content.default,
            },
            normal: {
                background: btn === null || btn === void 0 ? void 0 : btn.color.background['default-normal'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.default, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.default),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_40 = theme.Shadow) === null || _40 === void 0 ? void 0 : _40.Below.xs,
                color: btn === null || btn === void 0 ? void 0 : btn.color.content.default,
            },
            press: {
                background: btn === null || btn === void 0 ? void 0 : btn.color.background['default-pressed'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.default, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.default),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_41 = theme.Shadow) === null || _41 === void 0 ? void 0 : _41.Below.xs,
                color: btn === null || btn === void 0 ? void 0 : btn.color.content.default,
            },
        },
        facebook: {
            disable: {
                background: (_42 = theme.color) === null || _42 === void 0 ? void 0 : _42.Base.Foreground.Disable,
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.primary, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.disable),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: 'none',
                color: btn === null || btn === void 0 ? void 0 : btn.color.content.disable,
            },
            focus: {
                background: (_43 = theme.color) === null || _43 === void 0 ? void 0 : _43.Social['Foreground-Facebook-Default'],
                border: 'none',
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_44 = theme.State) === null || _44 === void 0 ? void 0 : _44.Focused.Default,
                color: (_45 = theme.color) === null || _45 === void 0 ? void 0 : _45.Social['Content-Facebook-Default'],
            },
            hover: {
                background: (_46 = theme.color) === null || _46 === void 0 ? void 0 : _46.Social['Foreground-Facebook-Default'],
                border: 'none',
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_47 = theme.Shadow) === null || _47 === void 0 ? void 0 : _47.Below.xs,
                color: (_48 = theme.color) === null || _48 === void 0 ? void 0 : _48.Social['Content-Facebook-Default'],
            },
            normal: {
                background: (_49 = theme.color) === null || _49 === void 0 ? void 0 : _49.Social['Foreground-Facebook-Default'],
                border: 'none',
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_50 = theme.Shadow) === null || _50 === void 0 ? void 0 : _50.Below.xs,
                color: (_51 = theme.color) === null || _51 === void 0 ? void 0 : _51.Social['Content-Facebook-Default'],
            },
            press: {
                background: (_52 = theme.color) === null || _52 === void 0 ? void 0 : _52.Social['Foreground-Facebook-Default'],
                border: 'none',
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_53 = theme.Shadow) === null || _53 === void 0 ? void 0 : _53.Below.xs,
                color: (_54 = theme.color) === null || _54 === void 0 ? void 0 : _54.Social['Content-Facebook-Default'],
            },
        },
        ghost: {
            danger: {
                disable: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background['ghost-danger-disable'],
                    border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.ghost, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border['ghost-disable']),
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: 'none',
                    color: btn === null || btn === void 0 ? void 0 : btn.color.content.disable,
                },
                focus: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background['ghost-danger-normal'],
                    border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.ghost, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.ghost),
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: (_55 = theme.State) === null || _55 === void 0 ? void 0 : _55.Focused.Default,
                    color: (_56 = theme.color) === null || _56 === void 0 ? void 0 : _56.Functional.Content.Error,
                },
                hover: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background['ghost-danger-hover'],
                    border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.ghost, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border['ghost-hover']),
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: 'none',
                    color: (_57 = theme.color) === null || _57 === void 0 ? void 0 : _57.Functional.Content.Error,
                },
                normal: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background['ghost-danger-normal'],
                    border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.ghost, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.ghost),
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: 'none',
                    color: (_58 = theme.color) === null || _58 === void 0 ? void 0 : _58.Functional.Content.Error,
                },
                press: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background['ghost-danger-press'],
                    border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.ghost, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border['ghost-pressed']),
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: 'none',
                    color: (_59 = theme.color) === null || _59 === void 0 ? void 0 : _59.Functional.Content.Error,
                },
            },
            disable: {
                background: btn === null || btn === void 0 ? void 0 : btn.color.background['ghost-disable'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.ghost, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border['ghost-disable']),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: 'none',
                color: btn === null || btn === void 0 ? void 0 : btn.color.content.disable,
            },
            focus: {
                background: (_60 = theme.color) === null || _60 === void 0 ? void 0 : _60.Base.Foreground['Transparent Focused'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.ghost, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.ghost),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_61 = theme.State) === null || _61 === void 0 ? void 0 : _61.Focused.Default,
                color: btn === null || btn === void 0 ? void 0 : btn.color.content.ghost,
            },
            hover: {
                background: (_62 = theme.color) === null || _62 === void 0 ? void 0 : _62.Base.Foreground.Hover,
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.ghost, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border['ghost-hover']),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: 'none',
                color: btn === null || btn === void 0 ? void 0 : btn.color.content.ghost,
            },
            normal: {
                background: btn === null || btn === void 0 ? void 0 : btn.color.background['ghost-normal'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.ghost, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.ghost),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: 'none',
                color: btn === null || btn === void 0 ? void 0 : btn.color.content.ghost,
            },
            press: {
                background: (_63 = theme.color) === null || _63 === void 0 ? void 0 : _63.Base.Foreground.Pressed,
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.ghost, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border['ghost-pressed']),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: 'none',
                color: btn === null || btn === void 0 ? void 0 : btn.color.content.ghost,
            },
        },
        google: {
            disable: {
                background: (_64 = theme.color) === null || _64 === void 0 ? void 0 : _64.Base.Foreground.Disable,
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.default, " solid ").concat((_65 = theme.color) === null || _65 === void 0 ? void 0 : _65['on-Base'].Border.Disable),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: 'none',
                color: btn === null || btn === void 0 ? void 0 : btn.color.content.disable,
            },
            focus: {
                background: (_66 = theme.color) === null || _66 === void 0 ? void 0 : _66.Base.Foreground['Elevated-16'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.default, " solid ").concat((_67 = theme.color) === null || _67 === void 0 ? void 0 : _67['on-Base'].Border.Default),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_68 = theme.State) === null || _68 === void 0 ? void 0 : _68.Focused.Default,
                color: (_69 = theme.color) === null || _69 === void 0 ? void 0 : _69['on-Base'].Content.High,
            },
            hover: {
                background: (_70 = theme.color) === null || _70 === void 0 ? void 0 : _70.Base.Foreground.Hover,
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.default, " solid ").concat((_71 = theme.color) === null || _71 === void 0 ? void 0 : _71['on-Base'].Border.Default),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_72 = theme.Shadow) === null || _72 === void 0 ? void 0 : _72.Below.xs,
                color: (_73 = theme.color) === null || _73 === void 0 ? void 0 : _73['on-Base'].Content.High,
            },
            normal: {
                background: (_74 = theme.color) === null || _74 === void 0 ? void 0 : _74.Base.Foreground['Elevated-16'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.default, " solid ").concat((_75 = theme.color) === null || _75 === void 0 ? void 0 : _75['on-Base'].Border.Default),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_76 = theme.Shadow) === null || _76 === void 0 ? void 0 : _76.Below.xs,
                color: (_77 = theme.color) === null || _77 === void 0 ? void 0 : _77['on-Base'].Content.High,
            },
            press: {
                background: (_78 = theme.color) === null || _78 === void 0 ? void 0 : _78.Base.Foreground.Pressed,
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.default, " solid ").concat((_79 = theme.color) === null || _79 === void 0 ? void 0 : _79['on-Base'].Border.Default),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_80 = theme.Shadow) === null || _80 === void 0 ? void 0 : _80.Below.xs,
                color: (_81 = theme.color) === null || _81 === void 0 ? void 0 : _81['on-Base'].Content.High,
            },
        },
        link: {
            danger: {
                disable: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background.link,
                    border: 'none',
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.link,
                    boxShadow: 'none',
                    color: btn === null || btn === void 0 ? void 0 : btn.color.content.disable,
                    height: 'fit-content',
                    minHeight: 'fit-content',
                    padding: '0px',
                },
                focus: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background.link,
                    border: 'none',
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.link,
                    boxShadow: (_82 = theme.State) === null || _82 === void 0 ? void 0 : _82.Focused.Default,
                    color: (_83 = theme.color) === null || _83 === void 0 ? void 0 : _83.Functional.Content.Error,
                    height: 'fit-content',
                    minHeight: 'fit-content',
                    padding: '0px',
                },
                hover: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background.link,
                    border: 'none',
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.link,
                    boxShadow: 'none',
                    color: (_84 = theme.color) === null || _84 === void 0 ? void 0 : _84.Functional.Content.Error,
                    height: 'fit-content',
                    minHeight: 'fit-content',
                    padding: '0px',
                },
                normal: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background.link,
                    border: 'none',
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.link,
                    boxShadow: 'none',
                    color: (_85 = theme.color) === null || _85 === void 0 ? void 0 : _85.Functional.Content.Error,
                    height: 'fit-content',
                    minHeight: 'fit-content',
                    padding: '0px',
                },
                press: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background.link,
                    border: 'none',
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: 'none',
                    color: (_86 = theme.color) === null || _86 === void 0 ? void 0 : _86.Functional.Content.Error,
                    height: 'fit-content',
                    minHeight: 'fit-content',
                    padding: '0px',
                },
            },
            disable: {
                background: btn === null || btn === void 0 ? void 0 : btn.color.background.link,
                border: 'none',
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.link,
                boxShadow: 'none',
                color: btn === null || btn === void 0 ? void 0 : btn.color.content.disable,
                height: 'fit-content',
                minHeight: 'fit-content',
                padding: '0px',
            },
            focus: {
                background: btn === null || btn === void 0 ? void 0 : btn.color.background.link,
                border: 'none',
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.link,
                boxShadow: (_87 = theme.State) === null || _87 === void 0 ? void 0 : _87.Focused.Default,
                color: btn === null || btn === void 0 ? void 0 : btn.color.content['link-normal'],
                height: 'fit-content',
                minHeight: 'fit-content',
                padding: '0px',
            },
            hover: {
                background: btn === null || btn === void 0 ? void 0 : btn.color.background.link,
                border: 'none',
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.link,
                boxShadow: 'none',
                color: btn === null || btn === void 0 ? void 0 : btn.color.content.tertiary,
                height: 'fit-content',
                minHeight: 'fit-content',
                padding: '0px',
            },
            normal: {
                background: btn === null || btn === void 0 ? void 0 : btn.color.background.link,
                border: 'none',
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.link,
                boxShadow: 'none',
                color: btn === null || btn === void 0 ? void 0 : btn.color.content['link-normal'],
                height: 'fit-content',
                minHeight: 'fit-content',
                padding: '0px',
            },
            press: {
                background: btn === null || btn === void 0 ? void 0 : btn.color.background.link,
                border: 'none',
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.link,
                boxShadow: 'none',
                color: btn === null || btn === void 0 ? void 0 : btn.color.content.tertiary,
                height: 'fit-content',
                minHeight: 'fit-content',
                padding: '0px',
            },
        },
        primary: {
            danger: {
                disable: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background.disable,
                    border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.primary, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.disable),
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: 'none',
                    color: btn === null || btn === void 0 ? void 0 : btn.color.content.disable,
                },
                focus: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background['primary-danger-normal'],
                    border: 'none',
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: (_88 = theme.State) === null || _88 === void 0 ? void 0 : _88.Focused.Default,
                    color: (_89 = theme.color) === null || _89 === void 0 ? void 0 : _89['on-Functional'].Content.High,
                },
                hover: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background['primary-danger-hover'],
                    border: 'none',
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: (_90 = theme.Shadow) === null || _90 === void 0 ? void 0 : _90.Below.xs,
                    color: (_91 = theme.color) === null || _91 === void 0 ? void 0 : _91['on-Functional'].Content.High,
                },
                normal: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background['primary-danger-normal'],
                    border: 'none',
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: (_92 = theme.Shadow) === null || _92 === void 0 ? void 0 : _92.Below.xs,
                    color: (_93 = theme.color) === null || _93 === void 0 ? void 0 : _93['on-Functional'].Content.High,
                },
                press: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background['primary-danger-pressed'],
                    border: 'none',
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: (_94 = theme.Shadow) === null || _94 === void 0 ? void 0 : _94.Below.xs,
                    color: (_95 = theme.color) === null || _95 === void 0 ? void 0 : _95['on-Functional'].Content.High,
                },
            },
            disable: {
                background: (_96 = theme.color) === null || _96 === void 0 ? void 0 : _96.Base.Foreground.Disable,
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.primary, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.disable),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: 'none',
                color: btn === null || btn === void 0 ? void 0 : btn.color.content.disable,
            },
            focus: {
                background: btn === null || btn === void 0 ? void 0 : btn.color.background['primary-normal'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.primary, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.primary),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_97 = theme.State) === null || _97 === void 0 ? void 0 : _97.Focused.Default,
                color: btn === null || btn === void 0 ? void 0 : btn.color.content['primary-pressed'],
            },
            hover: {
                background: btn === null || btn === void 0 ? void 0 : btn.color.background['primary-hover'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.primary, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.primary),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_98 = theme.Shadow) === null || _98 === void 0 ? void 0 : _98.Below.xs,
                color: btn === null || btn === void 0 ? void 0 : btn.color.content['primary-hover'],
            },
            normal: {
                background: btn === null || btn === void 0 ? void 0 : btn.color.background['primary-normal'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.primary, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.primary),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_99 = theme.Shadow) === null || _99 === void 0 ? void 0 : _99.Below.xs,
                color: (_100 = theme.color) === null || _100 === void 0 ? void 0 : _100['on-Primary'].Content.High,
            },
            press: {
                background: btn === null || btn === void 0 ? void 0 : btn.color.background['primary-pressed'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.primary, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.primary),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_101 = theme.Shadow) === null || _101 === void 0 ? void 0 : _101.Below.xs,
                color: btn === null || btn === void 0 ? void 0 : btn.color.content['primary-pressed'],
            },
        },
        secondary: {
            danger: {
                disable: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background.disable,
                    border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.secondary, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.disable),
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: 'none',
                    color: btn === null || btn === void 0 ? void 0 : btn.color.content.disable,
                },
                focus: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background['secondary-danger-normal'],
                    border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.secondary, " solid ").concat((_102 = theme.color) === null || _102 === void 0 ? void 0 : _102.Functional.Border.Error),
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: (_103 = theme.State) === null || _103 === void 0 ? void 0 : _103.Focused.Default,
                    color: (_104 = theme.color) === null || _104 === void 0 ? void 0 : _104.Functional.Content.Error,
                },
                hover: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background['secondary-danger-hover'],
                    border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.secondary, " solid ").concat((_105 = theme.color) === null || _105 === void 0 ? void 0 : _105.Functional.Border.Error),
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: (_106 = theme.Shadow) === null || _106 === void 0 ? void 0 : _106.Below.xs,
                    color: (_107 = theme.color) === null || _107 === void 0 ? void 0 : _107.Functional.Content['Error Hover'],
                },
                normal: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background['secondary-danger-normal'],
                    border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.secondary, " solid ").concat((_108 = theme.color) === null || _108 === void 0 ? void 0 : _108.Functional.Border.Error),
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: (_109 = theme.Shadow) === null || _109 === void 0 ? void 0 : _109.Below.xs,
                    color: (_110 = theme.color) === null || _110 === void 0 ? void 0 : _110.Functional.Content.Error,
                },
                press: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background['secondary-danger-pressed'],
                    border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.secondary, " solid ").concat((_111 = theme.color) === null || _111 === void 0 ? void 0 : _111.Functional.Border.Error),
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: (_112 = theme.Shadow) === null || _112 === void 0 ? void 0 : _112.Below.xs,
                    color: (_113 = theme.color) === null || _113 === void 0 ? void 0 : _113.Functional.Content.Error,
                },
            },
            disable: {
                background: (_114 = theme.color) === null || _114 === void 0 ? void 0 : _114.Base.Foreground.Disable,
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.secondary, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.disable),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: 'none',
                color: btn === null || btn === void 0 ? void 0 : btn.color.content.disable,
            },
            focus: {
                background: btn === null || btn === void 0 ? void 0 : btn.color.background['secondary-normal'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.secondary, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.secondary),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_115 = theme.State) === null || _115 === void 0 ? void 0 : _115.Focused.Default,
                color: btn === null || btn === void 0 ? void 0 : btn.color.content['secondary-normal'],
            },
            hover: {
                background: btn === null || btn === void 0 ? void 0 : btn.color.background['secondary-hover'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.secondary, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.secondary),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_116 = theme.Shadow) === null || _116 === void 0 ? void 0 : _116.Below.xs,
                color: btn === null || btn === void 0 ? void 0 : btn.color.content['secondary-hover'],
            },
            normal: {
                background: btn === null || btn === void 0 ? void 0 : btn.color.background['secondary-normal'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.secondary, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.secondary),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_117 = theme.Shadow) === null || _117 === void 0 ? void 0 : _117.Below.xs,
                color: btn === null || btn === void 0 ? void 0 : btn.color.content['secondary-normal'],
            },
            press: {
                background: btn === null || btn === void 0 ? void 0 : btn.color.background['secondary-pressed'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.secondary, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.secondary),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_118 = theme.Shadow) === null || _118 === void 0 ? void 0 : _118.Below.xs,
                color: btn === null || btn === void 0 ? void 0 : btn.color.content['secondary-pressed'],
            },
        },
        tertiary: {
            danger: {
                disable: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background['tertiary-disable'],
                    border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.tertiary, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border['tertiary-disable']),
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: 'none',
                    color: btn === null || btn === void 0 ? void 0 : btn.color.content.disable,
                },
                focus: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background['tertiary-danger-normal'],
                    border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.tertiary, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.tertiary),
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: (_119 = theme.State) === null || _119 === void 0 ? void 0 : _119.Focused.Default,
                    color: (_120 = theme.color) === null || _120 === void 0 ? void 0 : _120.Functional.Content.Error,
                },
                hover: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background['tertiary-danger-hover'],
                    border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.tertiary, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border['tertiary-hover']),
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: 'none',
                    color: (_121 = theme.color) === null || _121 === void 0 ? void 0 : _121.Functional.Content.Error,
                },
                normal: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background['tertiary-danger-normal'],
                    border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.tertiary, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.tertiary),
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: 'none',
                    color: (_122 = theme.color) === null || _122 === void 0 ? void 0 : _122.Functional.Content.Error,
                },
                press: {
                    background: btn === null || btn === void 0 ? void 0 : btn.color.background['tertiary-danger-pressed'],
                    border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.tertiary, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border['tertiary-pressed']),
                    borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                    boxShadow: 'none',
                    color: (_123 = theme.color) === null || _123 === void 0 ? void 0 : _123.Functional.Content.Error,
                },
            },
            disable: {
                background: btn === null || btn === void 0 ? void 0 : btn.color.background['tertiary-disable'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.tertiary, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border['tertiary-disable']),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: 'none',
                color: btn === null || btn === void 0 ? void 0 : btn.color.content.disable,
            },
            focus: {
                background: (_124 = theme.color) === null || _124 === void 0 ? void 0 : _124.Base.Foreground['Transparent Focused'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.tertiary, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.tertiary),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: (_125 = theme.State) === null || _125 === void 0 ? void 0 : _125.Focused.Default,
                color: btn === null || btn === void 0 ? void 0 : btn.color.content.tertiary,
            },
            hover: {
                background: btn === null || btn === void 0 ? void 0 : btn.color.background['tertiary-hover'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.tertiary, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border['tertiary-hover']),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: 'none',
                color: btn === null || btn === void 0 ? void 0 : btn.color.content.tertiary,
            },
            normal: {
                background: btn === null || btn === void 0 ? void 0 : btn.color.background['tertiary-normal'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.tertiary, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border.tertiary),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: 'none',
                color: btn === null || btn === void 0 ? void 0 : btn.color.content.tertiary,
            },
            press: {
                background: btn === null || btn === void 0 ? void 0 : btn.color.background['tertiary-pressed'],
                border: "".concat(btn === null || btn === void 0 ? void 0 : btn.borderWidth.tertiary, " solid ").concat(btn === null || btn === void 0 ? void 0 : btn.color.border['tertiary-pressed']),
                borderRadius: btn === null || btn === void 0 ? void 0 : btn.borderRadius.default,
                boxShadow: 'none',
                color: btn === null || btn === void 0 ? void 0 : btn.color.content.tertiary,
            },
        },
    }[(_126 = props.types) !== null && _126 !== void 0 ? _126 : 'primary'];
    var styles = function (_a) {
        var padding = _a.padding;
        return __assign(__assign({}, stateStyle.normal), { padding: padding, '&:hover': __assign({}, stateStyle.hover), '&:active': __assign({}, stateStyle.press), '&:focus': __assign({}, stateStyle.focus), '&:disabled': __assign({}, stateStyle.disable) });
    };
    return React.createElement(MuiButton, __assign({ sx: styles }, props));
};
export default Button;
